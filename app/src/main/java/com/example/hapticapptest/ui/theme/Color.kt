package com.example.hapticapptest.ui.theme

import androidx.compose.ui.graphics.Color


val Purple80 = Color(0xFFD0BCFF)
val PurpleGrey80 = Color(0xFFCCC2DC)
val Pink80 = Color(0xFFEFB8C8)

val Purple40 = Color(0xFF6650a4)
val PurpleGrey40 = Color(0xFF625b71)
val Pink40 = Color(0xFF7D5260)

internal val lightColors = Colors(
    isLight = true,
    // - - Button - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    buttonPrimaryBrand = Color(0xFFDF4142),
    buttonPrimaryBrandDisabled = Color(0x66DF4142),
    buttonPrimaryBrandContent = Color(0xFFFFFFFF),
    buttonPrimaryBrandContentDisabled = Color(0xFFFFFFFF),
    buttonSecondary = Color(0xFFEFF1F4),
    buttonSecondaryDisabled = Color(0x80EFF1F4),
    buttonSecondaryContent = Color(0xFF090A0A),
    buttonSecondaryContentDisabled = Color(0xFFADB3BC),
    buttonWhite = Color(0xFFFFFFFF),
    buttonWhiteDisabled = Color(0x66FFFFFF),
    buttonWhiteContent = Color(0xFF090A0A),
    buttonWhiteContentDisabled = Color(0xFFADB3BC),
    buttonOutline = Color(0xFFADB3BC),
    buttonOutlineDisabled = Color(0x66ADB3BC),
    buttonOutlineContent = Color(0xFF090A0A),
    buttonOutlineContentDisabled = Color(0xFFADB3BC),
    buttonPrimaryGreen = Color(0xFF30E3B7),
    buttonPrimaryGreenDisabled = Color(0xFFE5E5E5),
    buttonPrimaryGreenContent = Color(0xFFFFFFFF),
    buttonPrimaryGreenContentDisabled = Color(0xFFFFFFFF),
    buttonPrimaryBlue = Color(0xFF3772FF),
    buttonPrimaryBlueDisabled = Color(0x4D3772FF),
    buttonPrimaryBlueContent = Color(0xFFFFFFFF),
    buttonPrimaryBlueContentDisabled = Color(0xFFFFFFFF),
    // - - Border - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    borderOpaque = Color(0xFFEFF1F4),
    borderDefault = Color(0x1A171717),
    borderActive = Color(0x99171717),
    borderDisabled = Color(0x0D171717),
    borderInverse = Color(0x1AFFFFFF),
    borderPositive = Color(0xFF34C759),
    borderPositiveLight = Color(0xFF89E19F),
    borderAccent = Color(0xFF3772FF),
    borderAccentLight = Color(0xFFE3EBFF),
    borderBrand = Color(0xFFDF4142),
    borderNegativeLight = Color(0xFFFC8181),
    borderWarning = Color(0xFFFFB400),
    borderWarningLight = Color(0xFFFFD36D),
    borderGreen = Color(0xFF1ABE95),
    borderGreenLight = Color(0xFF30E3B7),
    // - - Background - - - - - - - - - - - - - - - - - - - - - - - - - -
    backgroundPrimary = Color(0xFFFFFFFF),
    backgroundSecondary = Color(0xFFEFF1F4),
    backgroundTertiary = Color(0xFFDBE0E7),
    backgroundLightGray = Color(0xFFF6F6F6),
    backgroundOverlayDark = Color(0x66171717),
    backgroundOverlayLight = Color(0x33FFFFFF),
    backgroundAccent = Color(0xFF3772FF),
    backgroundAlwaysDark = Color(0xFF171717),
    backgroundAlwaysLight = Color(0xFFFFFFFF),
    backgroundBrand = Color(0xFFDF4142),
    backgroundOverlayBlack = Color(0xCC171717),
    backgroundSnackbar = Color(0xFF343434),
    backgroundNegative = Color(0xFFFA2D2D),
    backgroundWarning = Color(0xFFFFB400),
    backgroundPositive = Color(0xFF34C759),
    backgroundSleep = Color(0xFF787AFF),
    backgroundLightAccent = Color(0xFFE3EBFF),
    backgroundLightNegative = Color(0xFFFEEAEA),
    backgroundLightWarning = Color(0xFFFFF4DB),
    backgroundLightPositive = Color(0xFFE1F7E7),
    backgroundRipple = Color(0xFF171717),
    // - - Icon - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    iconPrimary = Color(0xFF171717),
    iconSecondary = Color(0xFF9DAABD),
    iconBrand = Color(0xFFDF4142),
    iconPositive = Color(0xFF34C759),
    iconDisabled = Color(0xFFDEDEDE),
    iconFieldTransparent = Color(0x4D171717),
    iconOnColor = Color(0xFFFFFFFF),
    iconAccent = Color(0xFF3772FF),
    iconWarning = Color(0xFFFFB400),
    iconGreen = Color(0xFF30E3B7),
    iconOpaque = Color(0xFFEFF1F4),
    // - - Text - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    textPrimary = Color(0xFF171717),
    textSecondary = Color(0x99171717),
    textTertiary = Color(0x66171717),
    textStateDisabled = Color(0x33171717),
    textInversePrimary = Color(0xFFFFFFFF),
    textInverseSecondary = Color(0x99FFFFFF),
    textInverseTertiary = Color(0x66FFFFFF),
    textNegative = Color(0xFFFA2D2D),
    textWarning = Color(0xFFFFB400),
    textPositive = Color(0xFF34C759),
    textAccent = Color(0xFFF85010),
    textLink = Color(0xFF3772FF),
    textBrand = Color(0xFFDF4142),
    // - - Statistics - - - - - - - - - - - - - - -
    statisticsSteps = Color(0xFFDF4142)
)

/**
 * Color system.
 *
 * The names of the tokens match the tokens in
 * [Figma -> Android Design System -> Base/Colors](https://www.figma.com/file/9Zlh6QdbwcJRZhykX861YX/%E2%9D%96-Android-Design-system?node-id=2787%3A13462).
 *
 * The values are defined in [lightColors] and [darkColors] for light and dark schemes.
 */
@Suppress("LongParameterList")
class Colors(
    val isLight: Boolean,
    // - - Button - - - - - - - - - - - - - - - - -
    val buttonPrimaryBrand: Color,
    val buttonPrimaryBrandDisabled: Color,
    val buttonPrimaryBrandContent: Color,
    val buttonPrimaryBrandContentDisabled: Color,
    val buttonSecondary: Color,
    val buttonSecondaryDisabled: Color,
    val buttonSecondaryContent: Color,
    val buttonSecondaryContentDisabled: Color,
    val buttonWhite: Color,
    val buttonWhiteDisabled: Color,
    val buttonWhiteContent: Color,
    val buttonWhiteContentDisabled: Color,
    val buttonOutline: Color,
    val buttonOutlineDisabled: Color,
    val buttonOutlineContent: Color,
    val buttonOutlineContentDisabled: Color,
    val buttonPrimaryGreen: Color,
    val buttonPrimaryGreenDisabled: Color,
    val buttonPrimaryGreenContent: Color,
    val buttonPrimaryGreenContentDisabled: Color,
    val buttonPrimaryBlue: Color,
    val buttonPrimaryBlueDisabled: Color,
    val buttonPrimaryBlueContent: Color,
    val buttonPrimaryBlueContentDisabled: Color,
    // - - Border - - - - - - - - - - - - - - - - -
    val borderOpaque: Color,
    val borderDefault: Color,
    val borderActive: Color,
    val borderDisabled: Color,
    val borderInverse: Color,
    val borderPositive: Color,
    val borderPositiveLight: Color,
    val borderAccent: Color,
    val borderAccentLight: Color,
    val borderBrand: Color,
    val borderNegativeLight: Color,
    val borderWarning: Color,
    val borderWarningLight: Color,
    val borderGreen: Color,
    val borderGreenLight: Color,
    // - - Background - - - - - - - - - - - - - - -
    val backgroundPrimary: Color,
    val backgroundSecondary: Color,
    val backgroundTertiary: Color,
    val backgroundLightGray: Color,
    val backgroundOverlayDark: Color,
    val backgroundOverlayLight: Color,
    val backgroundAccent: Color,
    val backgroundAlwaysDark: Color,
    val backgroundAlwaysLight: Color,
    val backgroundBrand: Color,
    val backgroundOverlayBlack: Color,
    val backgroundSnackbar: Color,
    val backgroundNegative: Color,
    val backgroundWarning: Color,
    val backgroundPositive: Color,
    val backgroundSleep: Color,
    val backgroundLightAccent: Color,
    val backgroundLightNegative: Color,
    val backgroundLightWarning: Color,
    val backgroundLightPositive: Color,
    val backgroundRipple: Color,
    // - - Icon - - - - - - - - - - - - - - - - - -
    val iconPrimary: Color,
    val iconSecondary: Color,
    val iconBrand: Color,
    val iconPositive: Color,
    val iconDisabled: Color,
    val iconFieldTransparent: Color,
    val iconOnColor: Color,
    val iconAccent: Color,
    val iconWarning: Color,
    val iconGreen: Color,
    val iconOpaque: Color,
    // - - Text - - - - - - - - - - - - - - - - - -
    val textPrimary: Color,
    val textSecondary: Color,
    val textTertiary: Color,
    val textStateDisabled: Color,
    val textInversePrimary: Color,
    val textInverseSecondary: Color,
    val textInverseTertiary: Color,
    val textNegative: Color,
    val textWarning: Color,
    val textPositive: Color,
    val textAccent: Color,
    val textLink: Color,
    val textBrand: Color,
    // - - Statistics - - - - - - - - - - - - - - -
    val statisticsSteps: Color,
)